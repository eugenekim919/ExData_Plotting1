cachemean(special_v)
cachemean(special_v)
special_v
special_v$getmean()
View(special_v)
formals(special_v[["set"]])
special_v$m
View(special_v)
debugSource('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
makeVector(c(1,2,))
makeVector(c(1,2,4))
makeVector(c(1,2,4))$x
makeVector(c(1,2,4))$422dd
makeVector(c(1,2,4))$sasdfsadfsd
special_v
?"<<-"
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
special_v <- makeVector(c(1,2,4))
special_c
special_v
cachemean(special_v)
cachemean(special_v)
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2,3,4,5,6,11,12,13), nrow=3, ncol=3))
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2,3,4,5,6,11,12,13), nrow=3, ncol=3))
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(special_v)
cacheSolve(special_v)
special_m <- makeCacheMatrix(matrix(c(1,2,3,4,5,6,11,12,13), nrow=3, ncol=3))
special_m
cacheSolve(special_m)
special_m$get()
solve(special_m$get())
class(special_m$get())
solve(special_m$get())
special_m$get()
det(special_m$get())
special_m <- makeCacheMatrix(matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3))
det(special_m$get())
special_m$get()
solve(special_m$get())
special_m <- makeCacheMatrix(matrix(c(2,3,0,1,3,4,1,2,1), nrow=3, ncol=3))
solve(special_m$get())
cacheSolve(special_m)
cacheSolve(special_m)
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(special_m)
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/eugen/Coursera/Course 2 R/week 3/ProgrammingAssignment2/cachematrix.R')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "17bfcef3a7b32c4fa810",
secret = "e70138ae3a210480b4ebc63bd264d1c212f778c5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
View(myapp)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
myapp <- oauth_app("github",
key = "17bfcef3a7b32c4fa810",
secret = "e70138ae3a210480b4ebc63bd264d1c212f778c5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(github_token)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1 = content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "17bfcef3a7b32c4fa810",
secret = "e70138ae3a210480b4ebc63bd264d1c212f778c5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(github_token)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "17bfcef3a7b32c4fa810",
secret = "d6aa7ae88ccd0aeab8a3298e2fae6cad613f7565")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
library(httpuv)
library(httr)
oauth_endpoints("github")
.
oauth_endpoints("github")
.
oauth_endpoints("github")
myapp <- oauth_app("github", key = "17bfcef3a7b32c4fa810", secret = "d6aa7ae88ccd0aeab8a3298e2fae6cad613f7565")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(github_token)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
str(req)
View(github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("jsonlite")
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
libray("swirl")
libray(swirl)
library(swirl)
swirl()
5+7
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
install.packages("ggplot2")
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region  )
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region=="west")$pm25, col = "green")
plot(lattitude, pm25, pollution)
plot(latitude, pm25, pollution)
plot(pollution, latitude, pm25)
with(pollution, plot(latitude, pm25))
abline(12, lwd = 2, lty = 2)
abline(12, lwd = 2, lty = 2)
?abline
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$ppm, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
getwd()
getwd()pdf(file="myplot.pdf")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
setwd("C:/Users/eugen/Coursera/Course 4/week 1/ExData_Plotting1")
household_power <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"),
header = TRUE, sep = ";", na.strings = "?", colClasses = c("character", "character", rep("numeric", 7)))
house_power_sub <- filter(household_power, Date == "1/2/2007" | Date == "2/2/2007")
library(dplyr)
house_power_sub <- filter(household_power, Date == "1/2/2007" | Date == "2/2/2007")
house_power_sub$DateTime1 <- paste(as.Date(house_power_sub$Date, "%d/%m/%Y"), format(strptime(house_power_sub$Time, "%H:%M:%S"), "%H:%M:%S"))
head(house_power_sub)
class(house_power_sub$DateTime1)
head(strptime(house_power_sub$DateTime1, format = "%Y/%m/%d %H:%M:%S", tz = "GMT"))
library(dplyr)
head(as.Date(house_power_sub$DateTime1, format = "%Y/%m/%d %H:%M:%S", tz = "GMT"))
as.Date(house_power_sub$DateTime1)
head(strptime(house_power_sub$DateTime1, format = "%Y/%m/%d %H:%M:%S", tz = "GMT"))
class(house_power_sub$DateTime1)
head(house_power_sub)
head(with(house_power_sub, strptime(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")))
house_power_sub$DateTime1 <- with(house_power_sub, strptime(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S"))
head(house_power_sub)
class(house_power_sub$DateTime1)
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
head(house_power_sub)
View(house_power_sub)
house_power_sub_Thurs_Sat <- with(house_power_sub, filter(weekdays(DateTime1)==c("Thursday", "Friday", "Saturday")))
house_power_sub_Thurs_Sat <- filter(house_power_sub,weekdays(DateTime1)==c("Thursday", "Friday", "Saturday"))
filter(house_power_sub, weekdays(DateTime1) == c("Thursday", "Friday", "Saturday"))
weekdays(DateTime1) == c("Thursday", "Friday", "Saturday")
filter(house_power_sub, weekdays(house_power_sub$DateTime1) == c("Thursday", "Friday", "Saturday"))
clasX(house_power_sub$DateTime1)
class(house_power_sub$DateTime1)
head(weekdays(house_power_sub$DateTime1))
head(weekdays(house_power_sub$DateTime1)) == c("Thursday", "Friday", "Saturday")
filter(house_power_sub, weekdays(house_power_sub$DateTime1) == c("Thursday", "Friday", "Saturday"))
subset(house_power_sub, weekdays(house_power_sub$DateTime1) == c("Thursday", "Friday", "Saturday"))
house_power_sub_Thurs_Sat <- house_power_sub %>% filter(weekdays(DateTime1) == c("Thursday", "Friday", "Saturday"))
house_power_sub_Thurs_Sat <- subset(house_power_sub, weekdays(house_power_sub$DateTime1) == c("Thursday", "Friday", "Saturday"))
unique(weekdays(house_power_sub_Thurs_Sat$DateTime1))
unique(weekdays(house_power_sub$DateTime1))
rm(house_power_sub_Thurs_Sat)
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "")
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", lty = 1)
line(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", lty = 1)
line(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "")
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
line(weekdays(house_power_sub$DateTime1), house_power_sub$Global_active_power)
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "o")
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "o", pch = NULL)
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "o", pch = 1)
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "o", pch = 2)
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
dev.off()
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
plot(house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power, col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend(legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
legend(1, 1legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
legend(1, 1, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
legend(1, 100, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
legend(x = 1, y = NULL, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1:3)
dev.off()
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
par(mfrow = c(2,2))
dev.off()
par(mfrow = c(2,2))
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
####### Plot 2 #######
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
####### Plot 3 #######
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
####### Plot 1 #######
plot_1 <- function () {
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
}
####### Plot 2 #######
plot_2 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
}
####### Plot 3 #######
plot_3 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
}
dev.off()
par(mfrow = c(2,2))
plot_1()
dev.off()
par(mfrow = c(2,2))
plot_1()
plot_1()
plot_1()
plot_1()
dev.off()
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage,
col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power,
col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.off()
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage,
col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power,
col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.copy(png, "plot_4.png")
dev.off()
?png
?dev.copy
dev.copy(png, filename = "plot_4.png", width = 480, height = 480)
dev.off()
dev.off()
dev.off()
plot_2 <- function (x, y, xlab, ylab) {
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
}
plot_2()
plot_2(x = house_power_sub$DateTime1, y = house_power_sub$Voltage, xlab = "datetime", ylab = "Voltage")
plot(house_power_sub$DateTime1, house_power_sub$Voltage,
col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot_2 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
}
fetch_and_load()
fetch_and_load <- function () {
if (!file.exists("household_power_consumption.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", "./household_power_consumption.zip")
household_power <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"),
header = TRUE, sep = ";", na.strings = "?", colClasses = c("character", "character", rep("numeric", 7)))
# Subset for only 2007-02-01 and 2007-02-02
house_power_sub <- filter(household_power, Date == "1/2/2007" | Date == "2/2/2007")
# Convert dates and times
house_power_sub$DateTime1 <- with(house_power_sub, strptime(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S"))
}
}
fetch_and_load()
plot_1 <- function () {
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
}
plot_1()
source("./LoadFile.R")
fetch_and_load()
plot_1 <- function () {
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
}
plot_1()
dev.copy(png, filename = "plot_1.png", width = 480, height = 480)
dev.off()
####### Plot 2 #######
plot_2 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
}
plot_2()
dev.copy(png, filename = "plot_2.png", width = 480, height = 480)
dev.off()
####### Plot 3 #######
plot_3 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
}
plot_3()
dev.copy(png, filename = "plot_3.png", width = 480, height = 480)
dev.off()
####### Plot 4 #######
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.copy(png, filename = "plot_4.png", width = 480, height = 480)
dev.off()
####### Plot 3 #######
plot_3 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
}
plot_3()
dev.off()
plot_3()
plot_3()
####### Plot 3 #######
plot_3 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
png(filename = "plot_3.png", width = 480, height = 480)
plot_3()
dev.off()
png(filename = "plot_3.png", width = 480, height = 480)
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.off()
png(filename = "plot_4.png", width = 480, height = 480)
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.off()
dev.off()
source("./LoadFile.R")
fetch_and_load()
plot_1 <- function () {
hist(house_power_sub$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
}
png(filename = "plot_1.png", width = 480, height = 480)
plot_1()
dev.off()
source("./LoadFile.R")
fetch_and_load()
plot_2 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Global_active_power,
col = "black", xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_active_power, type = "l")
}
png(filename = "plot_2.png", width = 480, height = 480)
plot_2()
dev.off()
####### Plot 3 #######
source("./LoadFile.R")
fetch_and_load()
plot_3 <- function () {
plot(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, xlab = "", ylab = "Global Active Power (kilowatts)", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_1, type = "l", col = "black")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_2, type = "l", col = "red")
lines(house_power_sub$DateTime1, house_power_sub$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
}
png(filename = "plot_3.png", width = 480, height = 480)
plot_3()
dev.off()
source("./LoadFile.R")
fetch_and_load()
png(filename = "plot_4.png", width = 480, height = 480)
par(mfcol = c(2,2))
plot_2()
plot_3()
plot(house_power_sub$DateTime1, house_power_sub$Voltage, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Voltage, type = "l")
plot(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, col = "black", xlab = "datetime", ylab = "Voltage", main = "", type = "n")
lines(house_power_sub$DateTime1, house_power_sub$Global_reactive_power, type = "l")
dev.off()
house_power_sub <- subset(household_power, Date == "1/2/2007" | Date == "2/2/2007")
house_power_sub$DateTime1 <- with(house_power_sub, strptime(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S"))
